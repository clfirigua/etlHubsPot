
services:
  postgres:
    image: postgres:16-alpine
    container_name: etl_postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${USERNAMEPG}
      POSTGRES_PASSWORD: ${PASSWORDPG}
      POSTGRES_DB: ${DATABASEPG}
    ports:
      - "${PORTPG}:5432"
    volumes:
      - ${POSTGRES_VOLUME}:/var/lib/postgresql/data
    networks:
      - etl_network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: etl_pgadmin
    restart: always
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - postgres
    networks:
      - etl_network

  etl_backend:
    build:
      context: .              
      dockerfile: Dockerfile
    container_name: etl_backend
    restart: always
    env_file:
      - .env
    environment:
      TOKENHUBSPOT: ${TOKENHUBSPOT}
      PORT: ${PORT}
      HOSTPG: ${HOSTPG}          
      PORTPG: ${PORTPG}
      USERNAMEPG: ${USERNAMEPG}
      PASSWORDPG: ${PASSWORDPG}
      DATABASEPG: ${DATABASEPG}
      SCRAPING_CRON: ${SCRAPING_CRON}
    ports:
      - "${PORT}:3000"
    depends_on:
      - postgres
    networks:
      - etl_network

networks:
  etl_network:
    driver: bridge
